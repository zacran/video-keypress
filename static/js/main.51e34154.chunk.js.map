{"version":3,"sources":["keybindMap.js","Chart.js","Theme.js","App.js","index.js"],"names":["Keybinds","id","key","order","behavior","active","MIN_EVENT_DURATION","EVENT_LABEL","convertToMilliseconds","value","formatTime","fixedValue","toFixed","isNaN","useStyles","makeStyles","theme","root","flexGrow","margin","maxWidth","accordion","marginBottom","details","flexDirection","paper","padding","spacing","fontSize","textAlign","backgroundColor","palette","primary","main","color","secondary","contrastText","flexBasis","control","Chart","props","useState","formattedData","setFormattedData","derivedFields","setDerivedFields","cachedNumHeaderRows","setCachedNumHeaderRows","cachedFormattedDataSize","setCachedFormattedDataSize","selectedChartElement","setSelectedChartElement","setDeletedChartElement","useGlobal","state","setState","classes","useEffect","interval","setInterval","length","computeDerivedFields","clearInterval","data","filter","obj","console","log","uniqueBehaviors","forEach","event","indexOf","push","tempDerivedFields","keybindMap","keybinds","occurences","totalDuration","matchingEvents","keybind","avgDuration","derivedField","sort","a","b","undefined","textA","toUpperCase","textB","formatEvent","latestEvent","end","start","events","warn","isDataLoaded","dataFileName","isFormattedDataEmpty","areEventsEmpty","headerRows","type","metadata","duration","isVideo","JSON","stringify","eventsExist","newEventExists","unformattedEvent","formattedEvent","eventsDiff","formattedEvents","concat","derivedFieldsColumns","field","headerName","width","valueFormatter","params","handleResolveSelectedChartElement","reason","className","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","variant","AccordionDetails","style","height","rows","columns","autoPageSize","density","hideFooter","chartType","options","timeline","colorByRowLabel","showBarLabels","colors","rootProps","chartEvents","eventName","callback","selection","chartWrapper","getChart","getSelection","formattedSelection","row","selectedObject","Snackbar","open","autoHideDuration","onClose","message","action","Fragment","IconButton","size","aria-label","onClick","adjustedFormattedData","arr","parseInt","replace","adjustedData","createMuiTheme","500","SPACE_KEYS","content","marginTop","reactPlayer","slider","dataText","overflow","border","divider","borderRadius","shape","button","largeButton","display","toolbar","minHeight","maxHeight","restrictedText","whiteSpace","textOverflow","title","bottomAppBar","top","bottom","bottomToolbar","minWidth","menu","StyledMenu","withStyles","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","App","isPlayingBuffer","keybindInEdit","setKeybindInEdit","anchorEditKeybinds","setAnchorEditKeybinds","savedKeybinds","parse","localStorage","getItem","Array","isArray","confirmVideoReset","window","confirm","resetData","hiddenVideoUpload","current","isPlaying","openEditKeybind","Boolean","handleUpdateKeybinds","setItem","handleEditKeybindChange","prop","target","find","k","keyError","behaviorError","handleCancelEditKeybind","handleVideoSelect","click","handleDataSelect","hiddenDataUpload","handleOnStartPlay","handleKeyevent","String","recordKeydown","activity","parseFloat","playedSeconds","activeRecords","recordKeyup","Math","max","apply","map","e","isFinite","dataEvents","useEventListener","videoFilePath","includes","preventDefault","useRef","anchorSettings","setAnchorSettings","ThemeProvider","Theme","CssBaseline","ref","onChange","uploadedFile","files","video","document","createElement","URL","createObjectURL","src","addEventListener","name","fileName","scoringDate","Date","now","scoringDateText","toISOString","activeElement","blur","fileReader","FileReader","readAsText","onload","result","popoverMenu","anchorEl","keepMounted","ListItemText","align","disabled","Grid","paddingBottom","ToggleButtonGroup","videoSize","exclusive","ToggleButton","playbackRate","List","component","paddingTop","dense","ListItem","Popover","disableRestoreFocus","Card","CardContent","TextField","error","helperText","label","defaultValue","inputProps","maxLength","CardActions","Tooltip","smallButton","index","findIndex","currentTarget","handleTriggerEditKeybind","handleDeleteKeybind","clear","KeybindMap","AppBar","position","Toolbar","container","alignItems","item","Divider","orientation","flexItem","dataStr","encodeURIComponent","downloadAnchorNode","setAttribute","body","appendChild","remove","svgData","getElementById","getElementsByTagName","outerHTML","svgBlob","Blob","svgUrl","downloadLink","href","download","removeChild","aria-haspopup","gutterBottom","url","playing","autoPlay","muted","controls","onDuration","onProgress","progress","loadedSeconds","onPause","onStart","onPlay","xs","packageJson","version","setGlobal","recordedEvents","ReactDOM","render"],"mappings":"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","file":"static/js/main.51e34154.chunk.js","sourcesContent":["const Keybinds = {\n    Keybinds: [\n        { id: 1, key: '1', order: 1, behavior: \"Behavior1\", active: false },\n        { id: 2, key: '2', order: 2, behavior: \"Behavior2\", active: false },\n        { id: 3, key: '3', order: 3, behavior: \"Behavior3\", active: false }\n    ]\n};\n\nexport default Keybinds;","import Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport { DataGrid } from '@material-ui/data-grid';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { useEffect, useState } from \"react\";\nimport React, { useGlobal } from 'reactn';\nimport { Chart as GoogleChart } from \"react-google-charts\";\nimport \"./App.css\";\n\nconst COMPUTE_DERIVED_FIELDS_INTERVAL = 1000; // In milliseconds\nconst MIN_EVENT_DURATION = 0.01; // In seconds\nconst EVENT_LABEL = \"Event: \"\n\nfunction convertToMilliseconds(value) {\n    return value * 1000\n}\n\nfunction formatTime(value) {\n    var fixedValue = value.toFixed(2);\n    if (isNaN(fixedValue)) fixedValue = 0;\n    return `${value.toFixed(2)}ms`;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        margin: 'auto',\n        maxWidth: '600px',\n    },\n    accordion: {\n        margin: 'auto',\n        maxWidth: '840px',\n        marginBottom: '20px',\n    },\n    details: {\n        flexDirection: \"column\"\n    },\n    paper: {\n        padding: theme.spacing(1),\n        fontSize: '12px',\n        textAlign: 'center',\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.secondary.contrastText,\n        flexBasis: '25%',\n    },\n    control: {\n        padding: theme.spacing(2),\n    },\n}));\n\nconst Chart = (props) => {\n    const [formattedData, setFormattedData] = useState([]);\n    const [derivedFields, setDerivedFields] = useState([]);\n    const [cachedNumHeaderRows, setCachedNumHeaderRows] = useState(0);\n    const [cachedFormattedDataSize, setCachedFormattedDataSize] = useState(0);\n    const [selectedChartElement, setSelectedChartElement] = useState({});\n    const [deletedChartElement, setDeletedChartElement] = useState({});\n    const [state, setState] = useGlobal('state');\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            if (formattedData.length !== cachedFormattedDataSize) {\n                setCachedFormattedDataSize(formattedData.length);\n                computeDerivedFields();\n            }\n        }, COMPUTE_DERIVED_FIELDS_INTERVAL);\n        return () => clearInterval(interval);\n    });\n\n    const computeDerivedFields = () => {\n        // Remove header row of formatted data\n        var data = formattedData.filter(obj => typeof obj[0] === 'string' && obj[1] !== 'Meta');\n        console.log(formattedData);\n\n        // Find unqiue behaviors in existing data\n        const uniqueBehaviors = [];\n        data.forEach(event => {\n            if (uniqueBehaviors.indexOf(event[0]) === -1) {\n                uniqueBehaviors.push(event[0])\n            }\n        });\n\n        var tempDerivedFields = [];\n        const keybindMap = state.keybinds;\n\n        var id = 0;\n        // Derive fields for each unique behavior\n        uniqueBehaviors.forEach(behavior => {\n            var occurences = 0, totalDuration = 0;\n            var matchingEvents = data.filter(event => event[0] === behavior);\n            var order = keybindMap.filter(keybind => keybind.behavior === behavior).order;\n\n            console.log(\"finding derived fields for \" + behavior + \" found \" + matchingEvents.length + \" events\");\n\n            occurences = matchingEvents.length;\n\n            matchingEvents.forEach(event => {\n                totalDuration += (event[3] - event[2]);\n            });\n\n            var avgDuration = (totalDuration / occurences);\n            if (occurences === 0) avgDuration = 0;\n\n            var derivedField = {\n                id: id,\n                order: null,\n                behavior: behavior,\n                occurences: occurences,\n                totalDuration: totalDuration,\n                avgDuration: avgDuration\n            }\n\n            tempDerivedFields.push(derivedField);\n            id++;\n        });\n\n        // Sort derived fields by order property\n        tempDerivedFields.sort((a, b) => {\n            if (a.order !== undefined && b.order !== undefined) {\n                return (a.order > b.order) ? 1 : -1;\n            } else {\n                var textA = a.behavior.toUpperCase();\n                var textB = b.behavior.toUpperCase();\n                return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n            }\n        });\n\n        setDerivedFields((derivedFields) => {\n            derivedFields = tempDerivedFields;\n            return derivedFields;\n        });\n        state.derivedFields = derivedFields;\n    };\n\n    const formatEvent = (latestEvent) => {\n        // for display purposes, set a minimum value for durations\n        if ((latestEvent.end - latestEvent.start) < MIN_EVENT_DURATION) latestEvent.end += MIN_EVENT_DURATION;\n\n        // Seach existing records for similar start, end, duration times and adjust by the MIN_EVENT_DURATION\n        // This is to account for key presses that happen faster than the update cycle of React\n        state.data.events.forEach(obj => {\n            if (obj.id !== latestEvent.id && obj.behavior === latestEvent.behavior) {\n                if (obj.start === latestEvent.start) {\n                    console.warn(\"Adjusted event start time due to existing similar events: \" + latestEvent.id);\n                    latestEvent.start += (MIN_EVENT_DURATION + (0.1 * MIN_EVENT_DURATION));\n                }\n\n                if (obj.behavior === latestEvent.behavior && obj.end === latestEvent.start) {\n                    console.warn(\"Adjusted event start time due to existing similar events: \" + latestEvent.id);\n                    latestEvent.start += (0.1 * MIN_EVENT_DURATION);\n                }\n\n                if (obj.end === latestEvent.end) {\n                    console.warn(\"Adjusted event end time due to existing similar events: \" + latestEvent.id);\n                    latestEvent.end += (MIN_EVENT_DURATION + (0.1 * MIN_EVENT_DURATION));\n                }\n            }\n        });\n\n        return [\n            latestEvent.behavior,\n            EVENT_LABEL + latestEvent.id,\n            convertToMilliseconds(latestEvent.start),\n            convertToMilliseconds(latestEvent.end)\n        ];\n    };\n\n    useEffect(() => {\n        var isDataLoaded = (state.dataFileName !== '');\n        var isFormattedDataEmpty = (formattedData.length === 0);\n        var areEventsEmpty = (state.data.events && state.data.events.length === 0);\n\n        // Video has been cleared, reset the chart\n        if (!isDataLoaded && formattedData.length !== 0) {\n            setFormattedData([]);\n            setDerivedFields([]);\n        }\n\n        if (isDataLoaded && isFormattedDataEmpty) {\n            var headerRows = [\n                [\n                    { type: 'string', id: 'Behavior' },\n                    { type: 'string', id: 'Event' },\n                    { type: 'number', id: 'Start' },\n                    { type: 'number', id: 'End' },\n                ],\n                [\n                    \"Behavior\", \"Meta\", 0, convertToMilliseconds(state.data.metadata.duration)\n                ]\n            ];\n\n            if (state.isVideo && areEventsEmpty) {\n                // Adding empty Behavior records to force a consistent order\n                state.keybinds.forEach(obj => {\n                    headerRows.push([obj.behavior, \"Meta\", 0, 0]);\n                });\n            } else if (!areEventsEmpty) {\n                // Likely coming from a data upload - find unique behaviors and sort them alphabetically if order property does not exist\n                // Find unqiue behaviors in existing data\n                const uniqueBehaviors = [];\n                state.data.events.forEach(event => {\n                    if (uniqueBehaviors.indexOf(event.behavior) === -1) {\n                        uniqueBehaviors.push(event.behavior)\n                    }\n                });\n                console.log(JSON.stringify(uniqueBehaviors));\n                uniqueBehaviors.sort((a, b) => {\n                    var textA = a.toUpperCase();\n                    var textB = b.toUpperCase();\n                    return (textA < textB) ? -1 : (textA > textB) ? 1 : 0;\n                });\n                uniqueBehaviors.forEach(behavior => {\n                    headerRows.push([behavior, \"Meta\", 0, 0]);\n                });\n            }\n\n            setCachedNumHeaderRows(headerRows.length)\n            setFormattedData(headerRows);\n        }\n\n        // Check if events exist to avoid running code when idle\n        var eventsExist = (state.data.events && state.data.events.length > 0);\n        // Check if a new event exists -- length of data.events plus header rows\n        var newEventExists = ((state.data.events.length + cachedNumHeaderRows) > formattedData.length);\n\n        // Add new event and compute derived fields when new record is persisted\n        if (eventsExist && newEventExists) {\n            console.log(\"Adding new event\");\n            var eventsDiff = ((state.data.events.length + cachedNumHeaderRows) - formattedData.length);\n            var formattedEvents = [], unformattedEvent, formattedEvent;\n\n            while (eventsDiff > 0) {\n                unformattedEvent = state.data.events[state.data.events.length - eventsDiff];\n                formattedEvent = formatEvent(unformattedEvent);\n                formattedEvents.push(formattedEvent);\n                eventsDiff--;\n            }\n\n            setFormattedData(formattedData => (formattedData.concat(formattedEvents)));\n        }\n    });\n\n    const derivedFieldsColumns = [\n        { field: 'behavior', headerName: 'Behavior', width: 200 },\n        { field: 'occurences', headerName: 'Occurences', type: 'number', width: 200, valueFormatter: (params) => params.value, },\n        { field: 'avgDuration', headerName: 'Avg Duration', type: 'number', width: 200, valueFormatter: (params) => formatTime(params.value), },\n        { field: 'totalDuration', headerName: 'Total Duration', type: 'number', width: 200, valueFormatter: (params) => formatTime(params.value), },\n    ];\n\n    const getDerivedFieldsTableHeight = () => {\n        return (derivedFields.length > 0 ? (55 * derivedFields.length) + 3 : 75);\n    };\n\n    const handleResolveSelectedChartElement = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setSelectedChartElement({ active: false });\n        setDeletedChartElement({ active: false });\n    };\n\n    const handleResolveDeletedChartElement = (event, reason) => {\n        setDeletedChartElement({ active: false });\n    };\n\n    const handleUndoDeletedChartElement = () => {\n        var formattedData = [\n            deletedChartElement.behavior,\n            deletedChartElement.id,\n        ];\n    };\n\n    const handleDeleteSelectedChartElement = () => {\n        // Remove data with that ID from formattedData and from the data\n        var adjustedFormattedData = formattedData.filter(function (arr) {\n            return arr[1] !== selectedChartElement.id;\n        });\n        setFormattedData(adjustedFormattedData);\n\n        var id = parseInt(selectedChartElement.id.replace(EVENT_LABEL, \"\"));\n        var adjustedData = state.data.events.filter(function (obj) {\n            return obj.id !== id;\n        });\n        setState({\n            ...state,\n            data: {\n                events: adjustedData,\n                metadata: {\n                    ...state.data.metadata\n                }\n            }\n        });\n\n        setDeletedChartElement(selectedChartElement);\n        setSelectedChartElement({ active: false });\n    };\n\n    return (\n        <div className=\"Row\">\n            {props.state.dataFileName !== '' && (\n                <Accordion className={classes.accordion}>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"derivedfields-content\">\n                        <Typography variant=\"caption\">Derived Fields</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails className={classes.accordion}>\n                        <div style={{ height: getDerivedFieldsTableHeight(), width: '100%' }}>\n                            <DataGrid rows={derivedFields}\n                                columns={derivedFieldsColumns}\n                                autoPageSize={true}\n                                density=\"compact\"\n                                hideFooter={true}\n                            />\n                        </div>\n                    </AccordionDetails>\n                </Accordion>\n            )}\n            <div id=\"chart-container\" className=\"GoogleChart\">\n                {formattedData.length > 1 && (\n                    <GoogleChart\n                        width={'840px'}\n                        height={'400px'}\n                        chartType=\"Timeline\"\n                        data={formattedData}\n                        options={{\n                            timeline: {\n                                colorByRowLabel: true,\n                                margin: 'auto',\n                                showBarLabels: false,\n                            },\n                            colors: ['transparent', '#469FAE', '#3ECDB6', '#C09BD8', '#F67E5C', '#CA1252', '#DD5B5C', '#D9959A', '#938D99', '#5E614A'],\n                        }}\n                        rootProps={{ 'data-testid': '6' }}\n                        chartEvents={[\n                            {\n                                eventName: 'select',\n                                callback: ({ chartWrapper }) => {\n                                    var chart = chartWrapper.getChart()\n                                    var selection = chart.getSelection()[0]\n                                    var formattedSelection = formattedData[selection.row + 1];\n                                    var selectedObject = {\n                                        behavior: formattedSelection[0],\n                                        id: formattedSelection[1],\n                                        start: formattedSelection[2],\n                                        end: formattedSelection[3],\n                                        active: true\n                                    };\n                                    if (selectedObject.id !== 'Meta')\n                                        setSelectedChartElement(selectedObject);\n\n                                    console.log(selectedObject);\n                                },\n                            },\n                        ]}\n                    />\n                )}\n            </div>\n            <div>\n                <Snackbar\n                    open={selectedChartElement.active}\n                    autoHideDuration={null}\n                    onClose={handleResolveSelectedChartElement}\n                    message={`Selected: ${selectedChartElement.id}`}\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"delete\" color=\"secondary\" onClick={handleDeleteSelectedChartElement}>\n                                <DeleteIcon fontSize=\"small\" />\n                            </IconButton>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleResolveSelectedChartElement}>\n                                <CloseIcon fontSize=\"small\" />\n                            </IconButton>\n                        </React.Fragment>\n                    }>\n                </Snackbar>\n                {/* <Snackbar\n                    open={deletedChartElement.active}\n                    autoHideDuration={6000}\n                    onClose={handleResolveDeletedChartElement}\n                    message={`Deleted: ${deletedChartElement.id}`}\n                    action={\n                        <Button color=\"secondary\" size=\"small\" onClick={handleUndoDeletedChartElement}>\n                            Undo\n                        </Button>\n                    }>\n                </Snackbar> */}\n            </div>\n        </div>\n    );\n}\n\nexport default Chart;","import { createMuiTheme } from '@material-ui/core/styles'\nconst theme = createMuiTheme({\n    palette: {\n        primary: { 500: '#469FAE' },\n    },\n})\nexport default theme","import AppBar from '@material-ui/core/AppBar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport Popover from '@material-ui/core/Popover';\nimport { makeStyles, ThemeProvider, withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CodeIcon from '@material-ui/icons/Code';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport ImageIcon from '@material-ui/icons/Image';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport useEventListener from \"@use-it/event-listener\";\nimport { useEffect, useRef, useState } from \"react\";\nimport ReactPlayer from \"react-player\";\nimport React, { useGlobal } from 'reactn';\nimport packageJson from '../package.json';\nimport \"./App.css\";\nimport Chart from \"./Chart\";\nimport KeybindMap from \"./keybindMap\";\nimport Theme from './Theme';\n\nconst SPACE_KEYS = ['32', ' '];\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        marginTop: '55px'\n    },\n    reactPlayer: {\n        margin: 'auto'\n    },\n    slider: {\n        margin: '0px 20px',\n        width: '80%'\n    },\n    dataText: {\n        height: '420px',\n        width: '840px',\n        overflow: 'scroll',\n        margin: 'auto',\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.shape.borderRadius,\n    },\n    button: {\n        padding: 0,\n    },\n    largeButton: {\n        display: 'inline-block',\n        margin: 'auto',\n        '& svg': {\n            fontSize: 144\n        }\n    },\n    toolbar: {\n        minHeight: 48,\n        maxHeight: 48,\n    },\n    restrictedText: {\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis',\n        margin: '0px 10px',\n        maxWidth: '300px'\n    },\n    title: {\n        flexGrow: 1,\n    },\n    bottomAppBar: {\n        top: 'auto',\n        bottom: 0,\n    },\n    bottomToolbar: {\n        margin: 'auto',\n        minWidth: '700px',\n        textAlign: 'center',\n        minHeight: 32,\n        maxHeight: 32,\n    },\n    menu: {\n        width: 'fit-content',\n        border: `1px solid ${theme.palette.divider}`,\n        borderRadius: theme.shape.borderRadius,\n        '& svg': {\n            margin: theme.spacing(1.5),\n        },\n        '& hr': {\n            margin: theme.spacing(0, 0.5),\n        },\n    },\n}));\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: '1px solid #d3d4d5',\n        width: '200px',\n        margin: '0px 10px',\n    }\n})((props) => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n        }}\n        transformOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n        }}\n        {...props}\n    />\n));\n\nconst App = () => {\n    var isPlayingBuffer = false;\n    const [keybindInEdit, setKeybindInEdit] = useState({});\n    const [anchorEditKeybinds, setAnchorEditKeybinds] = useState(null);\n    const [state, setState] = useGlobal('state');\n\n    useEffect(() => {\n        var savedKeybinds = JSON.parse(localStorage.getItem('keybinds')) || undefined;\n        if (savedKeybinds && Array.isArray(savedKeybinds)) {\n            setState({ ...state, keybinds: savedKeybinds });\n        }\n    }, []);\n\n    const confirmVideoReset = () => {\n        return window.confirm(\"Are you sure you wish to reset the existing video? Unsaved data will be lost.\");\n    };\n\n    const resetData = () => {\n        hiddenVideoUpload.current.value = \"\";\n        setState({\n            ...state,\n            dataFileName: '',\n            isVideo: false,\n            isPlaying: false,\n            data: {\n                metadata: {},\n                events: []\n            }\n        });\n    };\n\n    function resetVideo() {\n        if (confirmVideoReset()) {\n            resetData();\n        }\n    };\n\n    const openEditKeybind = Boolean(anchorEditKeybinds);\n\n    const handleUpdateKeybinds = (keybinds) => {\n        localStorage.setItem('keybinds', JSON.stringify(keybinds));\n\n        var savedKeybinds = JSON.parse(localStorage.getItem('keybinds')) || undefined;\n        if (savedKeybinds && Array.isArray(savedKeybinds)) {\n            setState({ ...state, keybinds: savedKeybinds });\n        }\n    }\n\n    const handleEditKeybindChange = (prop) => (event) => {\n        var value = event.target.value;\n\n        if (value !== undefined) {\n            if (prop === 'order' && value !== '' && !isNaN(value))\n                value = parseInt(value);\n\n            if (prop === 'key') {\n                var existingKey = state.keybinds.find(k => k.key === value);\n                if (existingKey) {\n                    setKeybindInEdit({ ...keybindInEdit, keyError: true });\n                    return;\n                }\n            }\n\n            if (prop === 'behavior') {\n                var existingBehavior = state.keybinds.find(k => k.behavior === value);\n                if (existingBehavior) {\n                    setKeybindInEdit({ ...keybindInEdit, behaviorError: true });\n                    return;\n                }\n            }\n\n            setKeybindInEdit((keybindInEdit) => {\n                keybindInEdit = { ...keybindInEdit, [prop]: value };\n\n                if (prop === 'behavior' && keybindInEdit.behaviorError)\n                    keybindInEdit.behaviorError = false;\n\n                if (prop === 'key' && keybindInEdit.keyError)\n                    keybindInEdit.keyError = false;\n\n                return keybindInEdit;\n            });\n        }\n\n    };\n\n    const handleTriggerEditKeybind = (event, keybind) => {\n        setKeybindInEdit(keybind);\n        setAnchorEditKeybinds(event.currentTarget);\n    };\n\n    const handleAddNewKeybind = () => {\n        var keybinds = state.keybinds;\n        var id = Math.max.apply(Math, keybinds.map(function (k) { return k.id; }));\n        id = (isFinite(id) ? id + 1 : 0);\n        var order = Math.max.apply(Math, keybinds.map(function (k) { return k.order; }));\n        order = (isFinite(order) ? order + 1 : 0);\n\n        keybinds.push({\n            id: id, key: '0', order: order, behavior: \"New Behavior\", active: false\n        });\n\n        setState({ ...state, keybinds: keybinds });\n        handleUpdateKeybinds(keybinds);\n    };\n\n    const handleAcceptEditKeybind = (event) => {\n        var keybinds = state.keybinds;\n        var index = keybinds.findIndex(k => k.id === keybindInEdit.id);\n        keybinds[index] = keybindInEdit;\n\n\n        setState({ ...state, keybinds: keybinds });\n        handleUpdateKeybinds(keybinds);\n        handleCancelEditKeybind();\n    };\n\n    const handleCancelEditKeybind = () => {\n        setAnchorEditKeybinds(null);\n    };\n\n    const handleDeleteKeybind = (event, keybind) => {\n        if (window.confirm(\"Are you sure you wish to delete this keybind?\")) {\n            var keybinds = state.keybinds.filter(k => k.id !== keybind.id);\n\n            setState({ ...state, keybinds: keybinds });\n            handleUpdateKeybinds(keybinds);\n        }\n    }\n\n    const handleResetSettings = () => {\n        if (window.confirm(\"Are you sure you wish to clear local settings?\")) {\n            localStorage.clear();\n            setState({ ...state, keybinds: KeybindMap.Keybinds });\n        }\n    }\n\n    const handleDuration = (duration) => {\n        setState({ ...state, duration: duration });\n    };\n\n    const handleProgress = (progress) => {\n        setState({ ...state, playedSeconds: progress.playedSeconds, loadedSeconds: progress.loadedSeconds });\n    };\n\n    const handleVideoSelect = (event) => {\n        if (state.dataFileName !== '') {\n            if (!confirmVideoReset()) {\n                return;\n            }\n        }\n        resetData();\n        hiddenVideoUpload.current.click();\n    };\n\n    const handleVideoUpload = (event) => {\n        var uploadedFile = event.target.files[0];\n        if (uploadedFile) {\n            var video = document.createElement('video');\n            var videoFilePath = URL.createObjectURL(uploadedFile);\n            video.src = videoFilePath;\n            video.addEventListener('loadedmetadata', function () {\n                var duration = parseFloat(video.duration.toFixed(2));\n                setState({\n                    ...state,\n                    videoFilePath: videoFilePath,\n                    dataFileName: event.target.files[0].name,\n                    isVideo: true,\n                    data: {\n                        metadata: {\n                            fileName: event.target.files[0].name,\n                            scoringDate: Date.now(),\n                            scoringDateText: new Date().toISOString(),\n                            duration: duration\n                        },\n                        events: []\n                    }\n                });\n                document.activeElement.blur();\n            });\n        }\n    };\n\n    const handleDataSelect = () => {\n        if (state.dataFileName !== '') {\n            if (!confirmVideoReset()) {\n                return;\n            }\n        }\n        resetData();\n        hiddenDataUpload.current.click();\n    };\n\n    const handleDataUpload = (event) => {\n        const fileReader = new FileReader();\n        fileReader.readAsText(event.target.files[0], \"UTF-8\");\n        var fileName = event.target.files[0].name;\n        fileReader.onload = event => {\n            // Validate data\n            var obj = JSON.parse(event.target.result);\n            if (obj.events && Array.isArray(obj.events) && obj.metadata && obj.metadata.fileName) {\n                setState({ ...state, dataFileName: fileName, data: obj });\n            } else {\n                console.warn(\"Selected data not valid.\")\n            }\n        };\n    };\n\n    const handleDownloadData = () => {\n        if (state.data.events && state.data.events.length > 0) {\n            var dataStr = \"data:text/json;charset=utf-8,\" + encodeURIComponent(JSON.stringify(state.data));\n            var downloadAnchorNode = document.createElement('a');\n            downloadAnchorNode.setAttribute(\"href\", dataStr);\n            downloadAnchorNode.setAttribute(\"download\", state.dataFileName + \"-scored-behavior.json\");\n            document.body.appendChild(downloadAnchorNode); // required for firefox\n            downloadAnchorNode.click();\n            downloadAnchorNode.remove();\n        }\n    };\n\n    const handleDownloadSVG = () => {\n        if (state.data.events && state.data.events.length > 0) {\n            var chartContainer = document.getElementById('chart-container');\n            var svgData = chartContainer.getElementsByTagName('svg')[0].outerHTML;\n            svgData = svgData.replace(\"<svg\", \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\");\n\n            var svgBlob = new Blob([svgData], { type: \"image/svg+xml;charset=utf-8\" });\n            var svgUrl = URL.createObjectURL(svgBlob);\n            var downloadLink = document.createElement(\"a\");\n            downloadLink.href = svgUrl;\n            downloadLink.download = state.dataFileName + \"-scored-behavior.svg\";\n            document.body.appendChild(downloadLink);\n            downloadLink.click();\n            document.body.removeChild(downloadLink);\n        }\n    };\n\n    const handleNavigateToGitHub = () => {\n        window.open('https://github.com/zacran/video-keypress', '_blank');\n    };\n\n    // isPlayingBuffer will never allow starting a video with Space.\n    // This is by design because of autoPlay restrictions in Chrome.\n    // When video is started via Javascript, Chrome assumes it is \n    // autoplaying; user events such as adjusting the volume or fullsize controls can throw\n    // the state variables out of sync as Chrome fires start/stop commands.\n    const handleIsPlayingUpdate = () => {\n        isPlayingBuffer = !isPlayingBuffer;\n    };\n\n    const handleOnStartPlay = () => {\n        setState({ ...state, isPlaying: true });\n    };\n    const handleOnPauseStop = () => {\n        setState({ ...state, isPlaying: false });\n    };\n\n    const handleKeydown = (event) => {\n        if (state.videoFilePath !== '' && state.isVideo && SPACE_KEYS.includes(String(event.key))) {\n            event.preventDefault();\n            handleIsPlayingUpdate();\n        } else if (state.isVideo && state.isPlaying) {\n            handleKeyevent(event.key, recordKeydown);\n        }\n    };\n\n    const handleKeyup = ({ key }) => {\n        handleKeyevent(key, recordKeyup);\n    };\n\n    const handleKeyevent = (key, callback) => {\n        state.keybinds.forEach(function (keybind) {\n            if (keybind.key === (String(key))) {\n                callback(keybind);\n            }\n        });\n    };\n\n    const handleVideoSizeChange = (event, value) => {\n        if (value !== state.videoSize)\n            setState({ ...state, videoSize: value })\n    };\n\n    const handlePlaybackRateChange = (event, value) => {\n        if (value !== state.playbackRate)\n            setState({ ...state, playbackRate: parseFloat(value) })\n    };\n\n    const recordKeydown = (keybind) => {\n        if (!keybind.active) {\n            keybind.active = true;\n            let activity = {\n                key: keybind.key,\n                behavior: keybind.behavior,\n                order: keybind.order,\n                start: parseFloat(state.playedSeconds.toFixed(3))\n            };\n\n            let activeRecords = state.activeRecords;\n            activeRecords.push(activity);\n            setState({ ...state, activeRecords: activeRecords });\n        }\n    };\n\n    const recordKeyup = (keybind) => {\n        let activity = state.activeRecords.find(obj => { return obj.key === keybind.key });\n        let activeRecords = state.activeRecords.filter(obj => obj.key !== keybind.key);\n\n        if (activity) {\n            var end = state.playedSeconds.toFixed(3);\n            var id = Math.max.apply(Math, state.data.events.map(function (e) { return e.id; }));\n            id = (isFinite(id) ? id + 1 : 0);\n            keybind.active = false;\n            activity.id = id;\n            activity.end = parseFloat(end);\n\n            let dataEvents = state.data.events;\n            dataEvents.push(activity);\n\n            setState({\n                ...state,\n                activeRecords: activeRecords,\n                data: {\n                    events: dataEvents,\n                    metadata: {\n                        ...state.data.metadata\n                    }\n                }\n            });\n        }\n    };\n\n    useEventListener('keydown', handleKeydown);\n    useEventListener('keyup', handleKeyup);\n\n    const classes = useStyles();\n    const hiddenVideoUpload = useRef(null);\n    const hiddenDataUpload = useRef(null);\n\n    const [anchorSettings, setAnchorSettings] = useState(null);\n\n    const handleSettingsClick = (event) => {\n        setAnchorSettings(event.currentTarget);\n    };\n\n    const handleSettingsClose = () => {\n        setAnchorSettings(null);\n    };\n\n\n    return (\n        <ThemeProvider theme={Theme}>\n            <CssBaseline />\n            <div className=\"App\">\n                <input type=\"file\" ref={hiddenVideoUpload} onChange={handleVideoUpload} style={{ display: 'none' }} />\n                <input type=\"file\" ref={hiddenDataUpload} onChange={handleDataUpload} style={{ display: 'none' }} />\n                <StyledMenu\n                    className={classes.popoverMenu}\n                    anchorEl={anchorSettings}\n                    keepMounted\n                    open={Boolean(anchorSettings)}\n                    onClose={handleSettingsClose}>\n                    <ListItemText primary=\"Settings\" align=\"center\" disabled />\n                    <ListItemText secondary=\"Video Size\" align=\"center\" disabled />\n                    <Grid align=\"center\" style={{ paddingBottom: '8px' }}>\n                        <ToggleButtonGroup\n                            size=\"small\"\n                            value={state.videoSize || '840px'}\n                            align=\"center\"\n                            exclusive\n                            onChange={handleVideoSizeChange}\n                            aria-label=\"video-size-togglegroup\"\n                        >\n                            <ToggleButton value={'600px'} aria-label=\"centered\">\n                                <Typography variant=\"caption\" align=\"center\">600px</Typography>\n                            </ToggleButton>\n                            <ToggleButton value={'840px'} aria-label=\"centered\">\n                                <Typography variant=\"caption\" align=\"center\">840px</Typography>\n                            </ToggleButton>\n                            <ToggleButton value={'1080px'} aria-label=\"centered\">\n                                <Typography variant=\"caption\" align=\"center\">1080px</Typography>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Grid>\n                    <ListItemText secondary=\"Playback Speed\" align=\"center\" disabled />\n                    <Grid align=\"center\" style={{ paddingBottom: '8px' }}>\n                        <ToggleButtonGroup\n                            size=\"small\"\n                            value={state.playbackRate || 1}\n                            align=\"center\"\n                            exclusive\n                            onChange={handlePlaybackRateChange}\n                            aria-label=\"playback-rate-togglegroup\"\n                        >\n                            <ToggleButton value={0.5} aria-label=\"centered\">\n                                <Typography variant=\"caption\" align=\"center\">0.5x</Typography>\n                            </ToggleButton>\n                            <ToggleButton value={1.0} aria-label=\"centered\">\n                                <Typography variant=\"caption\" align=\"center\">1.0x</Typography>\n                            </ToggleButton>\n                            <ToggleButton value={1.5} aria-label=\"centered\">\n                                <Typography variant=\"caption\" align=\"center\">1.5x</Typography>\n                            </ToggleButton>\n                            <ToggleButton value={2.0} aria-label=\"centered\">\n                                <Typography variant=\"caption\" align=\"center\">2.0x</Typography>\n                            </ToggleButton>\n                        </ToggleButtonGroup>\n                    </Grid>\n                    <ListItemText secondary=\"Keybinds\" align=\"center\" disabled />\n                    <List component=\"nav\"\n                        aria-label=\"keybinds-list\"\n                        className={classes.root}\n                        style={{ paddingTop: '0px' }}\n                        dense\n                    >\n                        <ListItem dense>\n                            <ListItemText primary=\"Pause/Resume\" secondary=\"keybind: space\" />\n                        </ListItem>\n\n                        <Popover\n                            open={openEditKeybind}\n                            anchorEl={anchorEditKeybinds}\n                            disableRestoreFocus\n                            anchorOrigin={{\n                                vertical: 'center',\n                                horizontal: 'left',\n                            }}\n                            transformOrigin={{\n                                vertical: 'center',\n                                horizontal: 'right',\n                            }}\n                        >\n                            <Card className={classes.root} variant=\"outlined\">\n                                <CardContent>\n                                    <ListItemText primary=\"Edit Keybind\" secondary=\"Changes are saved to your browser cache\" />\n                                    <TextField id=\"keybind-behavior-input\" variant=\"outlined\" size=\"small\"\n                                        error={keybindInEdit.behaviorError ? true : false}\n                                        helperText={keybindInEdit.behaviorError ? \"Invalid value\" : \"\"}\n                                        label=\"Behavior Name\"\n                                        defaultValue={keybindInEdit.behavior}\n                                        onChange={handleEditKeybindChange('behavior')}\n                                    />\n                                    <TextField id=\"keybind-key-input\" variant=\"outlined\" size=\"small\"\n                                        error={keybindInEdit.keyError ? true : false}\n                                        helperText={keybindInEdit.keyError ? \"Invalid value\" : \"\"}\n                                        label=\"Key\"\n                                        inputProps={{ maxLength: 1 }}\n                                        defaultValue={keybindInEdit.key}\n                                        onChange={handleEditKeybindChange('key')}\n                                    />\n                                    {/* <TextField id=\"keybind-order-input\" variant=\"outlined\" size=\"small\"\n                                    label=\"Order\"\n                                    value={keybindInEdit.order}\n                                    onChange={handleEditKeybindChange('order')} /> */}\n                                </CardContent>\n                                <CardActions>\n                                    <Tooltip title=\"Accept\">\n                                        <IconButton size=\"small\"\n                                            className={classes.smallButton}\n                                            color=\"primary\"\n                                            disabled={keybindInEdit.keyError || keybindInEdit.behaviorError ? true : false}\n                                            onClick={handleAcceptEditKeybind}>\n                                            <CheckCircleIcon fontSize=\"small\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip title=\"Cancel\">\n                                        <IconButton size=\"small\"\n                                            color=\"secondary\"\n                                            onClick={handleCancelEditKeybind}>\n                                            <CancelIcon fontSize=\"small\" />\n                                        </IconButton>\n                                    </Tooltip>\n                                </CardActions>\n                            </Card>\n                        </Popover>\n\n                        {state.keybinds.map((keybind) =>\n                            <ListItem key={keybind.id} dense>\n                                <ListItemText primary={keybind.behavior} secondary={`keybind: ${keybind.key}`} />\n                                <Tooltip title=\"Edit Keybind\">\n                                    <IconButton size=\"small\" color=\"primary\" onClick={(e) => (handleTriggerEditKeybind(e, keybind))}>\n                                        <EditIcon fontSize=\"small\" />\n                                    </IconButton>\n                                </Tooltip>\n                                <Tooltip title=\"Delete Keybind\">\n                                    <IconButton size=\"small\" color=\"secondary\" onClick={(e) => (handleDeleteKeybind(e, keybind))}>\n                                        <DeleteIcon fontSize=\"small\" />\n                                    </IconButton>\n                                </Tooltip>\n                            </ListItem>\n                        )}\n                        <Grid align=\"center\">\n                            <Tooltip title=\"Add New Keybind\">\n                                <IconButton color=\"primary\" size=\"small\" onClick={handleAddNewKeybind}>\n                                    <AddCircleIcon fontSize=\"small\" />\n                                </IconButton>\n                            </Tooltip>\n                            <Tooltip title=\"Reset to Defaults\">\n                                <IconButton color=\"primary\" size=\"small\" onClick={handleResetSettings}>\n                                    <SettingsBackupRestoreIcon fontSize=\"small\" />\n                                </IconButton>\n                            </Tooltip>\n                        </Grid>\n\n\n                    </List>\n                </StyledMenu>\n\n                <AppBar position=\"fixed\" color=\"primary\" >\n                    <Toolbar className={classes.toolbar}>\n                        <Typography variant=\"h5\" component=\"h1\" className={classes.title}>Video Keypress</Typography>\n                        <Grid container alignItems=\"center\" className={classes.menu}>\n                            {state.dataFileName && (\n                                <Tooltip title={state.dataFileName}>\n                                    <Grid item>\n                                        <Typography variant=\"caption\" display=\"block\" className={classes.restrictedText}>Current {state.isVideo ? \"Video\" : \"Data\"}:</Typography>\n                                        <Typography variant=\"overline\" display=\"block\" className={classes.restrictedText}>{state.dataFileName}</Typography>\n                                    </Grid>\n                                </Tooltip>\n\n                            )}\n                            {state.dataFileName && (\n                                <Divider orientation=\"vertical\" flexItem />\n                            )}\n                            {state.dataFileName && (\n                                <Tooltip title=\"Download Data\">\n                                    <IconButton aria-label=\"download data\"\n                                        color=\"inherit\"\n                                        className={classes.button}\n                                        onClick={handleDownloadData}>\n                                        <GetAppIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            )}\n                            {state.dataFileName && (\n                                <Divider orientation=\"vertical\" flexItem />\n                            )}\n                            {state.dataFileName && (\n                                <Tooltip title=\"Download SVG\">\n                                    <IconButton aria-label=\"download svg\"\n                                        color=\"inherit\"\n                                        className={classes.button}\n                                        onClick={handleDownloadSVG}>\n                                        <ImageIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            )}\n                            {state.dataFileName && (\n                                <Divider orientation=\"vertical\" flexItem />\n                            )}\n                            {state.dataFileName && (\n                                <Tooltip title=\"Unset Video\">\n                                    <IconButton aria-label=\"unset video\"\n                                        color=\"inherit\"\n                                        className={classes.button}\n                                        onClick={resetVideo}>\n                                        <CancelIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            )}\n                            {state.dataFileName && (\n                                <Divider orientation=\"vertical\" flexItem />\n                            )}\n\n                            <Tooltip title=\"Select Video\">\n                                <IconButton aria-label=\"select video\"\n                                    color=\"inherit\"\n                                    className={classes.button}\n                                    onClick={(e) => handleVideoSelect(e)}>\n                                    <MovieIcon />\n                                </IconButton>\n                            </Tooltip>\n                            <Divider orientation=\"vertical\" flexItem />\n                            <Tooltip title=\"Select Data\">\n                                <IconButton aria-label=\"select data\"\n                                    color=\"inherit\"\n                                    className={classes.button}\n                                    onClick={handleDataSelect}>\n                                    <CodeIcon />\n                                </IconButton>\n                            </Tooltip>\n                            <Divider orientation=\"vertical\" flexItem />\n                            <Tooltip title=\"Settings\">\n                                <IconButton aria-label=\"settings\"\n                                    color=\"inherit\"\n                                    aria-haspopup=\"true\"\n                                    onClick={handleSettingsClick}\n                                    className={classes.button}>\n                                    <SettingsIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </Grid>\n                    </Toolbar>\n                </AppBar>\n                <div className={classes.content}>\n                    {!state.dataFileName && (\n                        <div align=\"center\">\n                            <Typography variant=\"caption\" display=\"block\" align=\"center\" gutterBottom>Please select a video or select data from a previous session!</Typography>\n                            <Tooltip title=\"Select Video\" align=\"center\">\n                                <IconButton aria-label=\"select video\"\n                                    color=\"primary\"\n                                    className={classes.largeButton}\n                                    onClick={(e) => handleVideoSelect(e)}>\n                                    <MovieIcon />\n                                </IconButton>\n                            </Tooltip>\n                            <Tooltip title=\"Select Data\" align=\"center\">\n                                <IconButton aria-label=\"select video\"\n                                    color=\"primary\"\n                                    className={classes.largeButton}\n                                    onClick={(e) => handleDataSelect(e)}>\n                                    <CodeIcon />\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n                    )}\n\n                    <div className=\"Row\">\n                        <div className=\"VideoPlay\">\n                            {state.dataFileName && !state.isVideo && (\n                                <div className={classes.dataText}><pre>{JSON.stringify(state.data, undefined, 2)}</pre></div>\n                            )}\n                            {state.dataFileName && state.isVideo && (\n                                <ReactPlayer url={state.videoFilePath}\n                                    className={classes.reactPlayer}\n                                    playing={isPlayingBuffer}\n                                    width={state.videoSize}\n                                    height=\"100%\"\n                                    autoPlay={false}\n                                    muted={true}\n                                    controls={true}\n                                    onDuration={handleDuration}\n                                    onProgress={handleProgress}\n                                    playbackRate={state.playbackRate || 1}\n                                    onPause={handleOnPauseStop}\n                                    onStart={handleOnStartPlay}\n                                    onPlay={handleOnStartPlay}\n                                />\n                            )}\n                            <div className=\"Row\">\n                                <Chart state={state} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <AppBar position=\"fixed\" color=\"primary\" className={classes.bottomAppBar}>\n                    <Toolbar className={classes.bottomToolbar}>\n                        <Grid container alignItems=\"center\" spacing={2}>\n                            <Grid item xs={6}>\n                                <Typography variant=\"caption\" align=\"center\" gutterBottom>\n                                    No data is transfered. All data remains in your browser.\n                            </Typography>\n                            </Grid>\n                            <Grid item xs={1}>\n                                <Tooltip title=\"Visit GitHub Repo\">\n                                    <IconButton aria-label=\"visit github repo\"\n                                        color=\"inherit\"\n                                        className={classes.button}\n                                        onClick={handleNavigateToGitHub}>\n                                        <GitHubIcon />\n                                    </IconButton>\n                                </Tooltip>\n                            </Grid>\n                            <Grid item xs={1}>\n                                <Typography variant=\"caption\" align=\"center\" gutterBottom>\n                                    v{packageJson.version}\n                                </Typography>\n                            </Grid>\n                            <Grid item xs={4}>\n                                <Typography variant=\"caption\" align=\"center\" gutterBottom>\n                                    GNU General Public License\n                            </Typography>\n                            </Grid>\n                        </Grid>\n                    </Toolbar>\n                </AppBar>\n            </div >\n        </ThemeProvider>\n    );\n}\n\nexport default App;","import React, { setGlobal } from 'reactn'\nimport ReactDOM from \"react-dom\";\nimport KeybindMap from \"./keybindMap\";\nimport App from \"./App\";\n\n// Set an initial global state directly:\nsetGlobal({\n    state: {\n        dataFileName: '',\n        isVideo: false,\n        isPlaying: false,\n        duration: 0,\n        playedSeconds: 0,\n        loadedSeconds: 0,\n        playbackRate: 1,\n        videoSize: '840px',\n        keybinds: KeybindMap.Keybinds,\n        data: {\n            recordedEvents: 0,\n            metadata: {},\n            events: []\n        },\n        activeRecords: [],\n        derivedFields: []\n    }\n});\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}